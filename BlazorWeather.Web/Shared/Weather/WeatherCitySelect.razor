@inject IWeatherService weatherService
@inject NavigationManager navigationManager

@if (city != null)
{
    <h3>Ваш город:
        @{
            var name = (city.Local_names?.ContainsKey("ru")) ?? false ? city?.Local_names["ru"] : city.Name;
            <text>@name</text>
        }
    </h3>
}
else
{
     <h3>Ваш город не выбран</h3>
}

<hr />
<h5>Вы можете сменить город</h5>
<EditForm Model="@seLectCityModel" OnValidSubmit="@HandleValidSubmit">
    <div class="mb-3">
        <InputText class="form-control text-dark" id="name" @bind-Value="seLectCityModel.Name" />
    </div>
    <div class="mb-3">
        <button class="btn btn-primary" type="submit">Найти</button>
    </div>
</EditForm>

@if (error != null)
{
    <ExceptionAlert ex="error"></ExceptionAlert>
}

@if (search != null)
{
    <div class="card border rounded p-3">
        <div class="display-6">@search.Name</div>
        <div class="mb-3">
            @search.Country
        </div>
        <div class="mb-3">
            @search.Lat
            @search.Lon
        </div>
        <div class="mb-3">
            <button class="btn btn-primary" @onclick=HandleSubmit>Выбрать город</button>
        </div>

    </div>
}

@code {
    private GeocodingDto? city;
    private GeocodingDto? search;
    private ServiceResponseException? error;

    private class SeLectCityModel
    {
        public string Name { get; set; }
    };
    private SeLectCityModel seLectCityModel = new();

    private async Task HandleValidSubmit()
    {
        error = null;
        try
        {
            search = await weatherService.SearchCity(seLectCityModel.Name);
        }
        catch (ServiceResponseException e)
        {
            error = e;
        }

    }

    private async Task HandleSubmit()
    {
        await weatherService.SetUserCity(search);
        navigationManager.NavigateTo("/");
    }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            city = await weatherService.GetUserCity();
        }
        catch (ServiceResponseException e)
        {
        }
    }
}