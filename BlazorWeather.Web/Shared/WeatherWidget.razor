@inject IWeatherService weatherService

@if (Errors != null)
{
    <DisplayList CssClass="display-5 alert-danger" Items="Errors"></DisplayList>
}

@if (currentWeather == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <section>
        <div class="card border-secondary" style="border-radius: 35px;">
            <div class="card-body p-4">

                <div class="d-flex">
                    <h6 class="flex-grow-1"><WetaherCityInfo /></h6>
                    <h6>@DateConverter.UnixTimeToLocalDateTime(currentWeather.Dt).ToString("H:mm")</h6>
                </div>

                <div class="d-flex flex-column text-center mt-5 mb-4">
                    <span class="small text-black-75">@currentWeather.Weather.First().Description</span>
                    <h6 class="display-4 mb-0 font-weight-bold text-black-75">@currentWeather.Main.Temp°C</h6>
                    <div class="d-flex flex-row justify-content-center mt-2">
                        <span class="small text-black-75">
                            @currentWeather.Main.TempMin°C
                            &nbsp;/&nbsp;
                            @currentWeather.Main.TempMax°C
                        </span>
                    </div>
                </div>

                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <div>
                            <i class="fas fa-wind fa-fw"></i>
                            <span class="ms-1">@currentWeather.Wind.Speed м/с</span>
                        </div>
                        <div>
                            <i class="fas fa-tint fa-fw"></i>
                            <span class="ms-1"> @currentWeather.Main.Humidity% </span>
                        </div>
                        <div>
                            <i class="fas fa-cloud fa-fw"></i>
                            <span class="ms-1"> @currentWeather.Clouds.All% </span>
                        </div>
                        <div>
                            <i class="fas fa-gauge fa-fw"></i>
                            <span class="ms-1"> @(Math.Round(currentWeather.Main.Pressure * 0.750064)) мм рт.ст.</span>
                        </div>
                    </div>
                    <div>
                        <img src="@($"http://openweathermap.org/img/wn/{currentWeather.Weather.First().Icon}@2x.png")"
                         alt="currentWeather.Weather.First().Icon">
                    </div>
                </div>

            </div>
        </div>

        <div class="card border-secondary mt-3" style="border-radius: 35px;">
            <div class="card-body">
                <div class="d-flex flex-column text-center">
                    <span class="small text-black-75">Ощущается как @currentWeather.Main.FeelsLike°C</span>
                </div>
            </div>
        </div>
    </section>
}


@code {
    private WeatherCurrentDto? currentWeather;
    private List<string>? Errors { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var current_weather_or_error = await weatherService.GetWeather();
        currentWeather = current_weather_or_error.Response;
        if (!current_weather_or_error.IsSuccess)
        {
            Errors = new()
            {
                current_weather_or_error.Error,
            };
            Console.WriteLine(Errors[0]);
        }
    }
}